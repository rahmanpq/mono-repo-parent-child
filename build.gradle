import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins{
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management'  version "${springDependencyManagementVersion}"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.2.0"
}

subprojects {
    apply plugin: 'java'

    group = groupName
    
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        // intentional empty will be setting common dependencies for all repos
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    }

    test {
	useJUnitPlatform()
    }

}

project(':projectA') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
   
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
        implementation "org.springframework.kafka:spring-kafka:${springKafkaVersion}"
        implementation "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"

        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testImplementation "org.springframework.kafka:spring-kafka-test:${springKafkaVersion}"
        testImplementation 'io.projectreactor:reactor-test'
    }
}

project(':projectB') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "com.github.davidmc24.gradle.plugin.avro"

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter"
        implementation "org.springframework.kafka:spring-kafka"
        implementation "org.springframework.boot:spring-boot-starter-webflux"
        implementation "org.springframework.cloud:spring-cloud-stream"
        implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka"
        implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka-streams"
        implementation group: 'org.apache.kafka', name: 'kafka-streams'

        implementation "org.apache.avro:avro:1.10.1"


        testImplementation "org.springframework.boot:spring-boot-starter-test:"
        testImplementation "org.springframework.kafka:spring-kafka-test"
        testImplementation 'io.projectreactor:reactor-test'
    }

    //gradle-avro-plugin setting
    avro {
        //convert all string type to "java.lang.CharSequence"
        stringType = "CharSequence"
    }

    def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
        source("src/avro")
        outputDir = file("dest/avro")
    }

    tasks.named("compileJava").configure {
        source(generateAvro)
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springKafkaStreamVersion}"
        }
    }
}


